---
- name: Create service user
  user:
    name: "{{ service_user }}"
    state: present

- name: Copy systemd service file to server
  copy:
    src: spring-boot-app.service
    dest: /etc/systemd/system/spring-boot-app.service
    owner: root
    group: root

- name: Reload systemd
  systemd:
    daemon_reload: true

- name: Get the latest snapshot version"
  shell: curl --silent -u admin:Admin12345*** http://192.168.56.56:8081/repository/spring-boot-app/com/baeldung/spring-boot-simple/spring-boot-simple/1.0.0-SNAPSHOT/maven-metadata.xml | sed -n 's|<value>\(.*\)</value>|\1|p' | sed -e 's/^[ \t]*//' | sort -nr | head -1
  register: latest_snapshot_version

- name: Download spring-boot artefact to server
  shell: sudo curl -u admin:Admin12345***  -L -X GET http://192.168.56.56:8081/repository/spring-boot-app/com/baeldung/spring-boot-simple/spring-boot-simple/1.0.0-SNAPSHOT/spring-boot-simple-{{latest_snapshot_version.stdout}}.war --output /opt/spring-boot-app.war

- name: Set permissions for all files in directory
  ansible.builtin.file:
    path: /opt/spring-boot-app.war
    mode: '777'

- name: Start and enable the service
  systemd:
    name: "{{ service_name }}"
    state: started
    enabled: yes
  notify:
    - Restart my service

- name: Ensure the service is enabled and started
  systemd:
    name: "{{ service_name }}.service"
    enabled: true
    state: started

- name: Get service status
  shell: systemctl status {{ service_name }} | grep Active
  register: service_status
  ignore_errors: true

- name: Print failed service status in red
  debug:
    msg: "ERROR: {{ service_status.stdout  }}"
  when: "'failed' in service_status.stdout"

